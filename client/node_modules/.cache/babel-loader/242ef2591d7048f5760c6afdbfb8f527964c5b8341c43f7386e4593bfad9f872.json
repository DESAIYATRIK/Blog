{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosInstance.interceptors.request.use(function (config) {\n  // Modify request config if needed\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  // Process successful responses\n  return response.data;\n}, function (error) {\n  // Process and handle errors\n  return Promise.reject(error);\n});\nconst API = {\n  getPostById: async postId => {\n    try {\n      const response = await axiosInstance.get(`/posts/${postId}`);\n      return {\n        isSuccess: true,\n        data: response\n      };\n    } catch (error) {\n      return {\n        isError: true,\n        error\n      };\n    }\n  },\n  deletePost: async postId => {\n    try {\n      await axiosInstance.delete(`/posts/${postId}`);\n      return {\n        isSuccess: true\n      };\n    } catch (error) {\n      return {\n        isError: true,\n        error\n      };\n    }\n  }\n};\nexport default API;","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","data","API","getPostById","postId","get","isSuccess","isError","deletePost","delete"],"sources":["D:/Summer Internship/Blog-Website/client/src/service/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\nconst axiosInstance = axios.create({\n    baseURL: API_URL,\n    timeout: 10000,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n\naxiosInstance.interceptors.request.use(\n    function(config) {\n        // Modify request config if needed\n        return config;\n    },\n    function(error) {\n        return Promise.reject(error);\n    }\n);\n\naxiosInstance.interceptors.response.use(\n    function(response) {\n        // Process successful responses\n        return response.data;\n    },\n    function(error) {\n        // Process and handle errors\n        return Promise.reject(error);\n    }\n);\n\nconst API = {\n    getPostById: async (postId) => {\n        try {\n            const response = await axiosInstance.get(`/posts/${postId}`);\n            return { isSuccess: true, data: response };\n        } catch (error) {\n            return { isError: true, error };\n        }\n    },\n    deletePost: async (postId) => {\n        try {\n            await axiosInstance.delete(`/posts/${postId}`);\n            return { isSuccess: true };\n        } catch (error) {\n            return { isError: true, error };\n        }\n    }\n};\n\nexport default API;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAClC,UAASC,MAAM,EAAE;EACb;EACA,OAAOA,MAAM;AACjB,CAAC,EACD,UAASC,KAAK,EAAE;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAEDT,aAAa,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CACnC,UAASK,QAAQ,EAAE;EACf;EACA,OAAOA,QAAQ,CAACC,IAAI;AACxB,CAAC,EACD,UAASJ,KAAK,EAAE;EACZ;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,MAAMK,GAAG,GAAG;EACRC,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC3B,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMZ,aAAa,CAACiB,GAAG,CAAC,UAAUD,MAAM,EAAE,CAAC;MAC5D,OAAO;QAAEE,SAAS,EAAE,IAAI;QAAEL,IAAI,EAAED;MAAS,CAAC;IAC9C,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZ,OAAO;QAAEU,OAAO,EAAE,IAAI;QAAEV;MAAM,CAAC;IACnC;EACJ,CAAC;EACDW,UAAU,EAAE,MAAOJ,MAAM,IAAK;IAC1B,IAAI;MACA,MAAMhB,aAAa,CAACqB,MAAM,CAAC,UAAUL,MAAM,EAAE,CAAC;MAC9C,OAAO;QAAEE,SAAS,EAAE;MAAK,CAAC;IAC9B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZ,OAAO;QAAEU,OAAO,EAAE,IAAI;QAAEV;MAAM,CAAC;IACnC;EACJ;AACJ,CAAC;AAED,eAAeK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}