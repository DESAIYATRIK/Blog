{"ast":null,"code":"var _jsxFileName = \"D:\\\\Summer Internship\\\\Blog-Website\\\\client\\\\src\\\\components\\\\home\\\\post\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Grid, Box } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../../service/api';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category');\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await API.getAllPosts({\n          category: category || ''\n        });\n        if (response.isSuccess) {\n          setPosts(response.data);\n          setError(null);\n        } else {\n          setError('Failed to fetch posts');\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        setError('Failed to fetch posts');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [category]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: '#878787',\n        margin: '30px 80px',\n        fontSize: 18\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 3,\n        sm: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          to: `details/${post._id}`,\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: '#878787',\n        margin: '30px 80px',\n        fontSize: 18\n      },\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Posts, \"2AtmWEn+R5SnMZGuc+WhgmsUMaw=\", false, function () {\n  return [useSearchParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Grid","Box","Link","useSearchParams","API","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","posts","setPosts","loading","setLoading","error","setError","searchParams","category","get","fetchData","response","getAllPosts","isSuccess","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","margin","fontSize","length","container","spacing","map","post","item","lg","sm","xs","textDecoration","to","_id","_c","$RefreshReg$"],"sources":["D:/Summer Internship/Blog-Website/client/src/components/home/post/Posts.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Grid, Box } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../../service/api';\nimport Post from './Post';\n\nconst Posts = () => {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [searchParams] = useSearchParams();\n    const category = searchParams.get('category');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const response = await API.getAllPosts({ category: category || '' });\n                if (response.isSuccess) {\n                    setPosts(response.data);\n                    setError(null);\n                } else {\n                    setError('Failed to fetch posts');\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n                setError('Failed to fetch posts');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [category]);\n\n    if (loading) {\n        return <Box>Loading...</Box>;\n    }\n\n    if (error) {\n        return <Box style={{ color: '#878787', margin: '30px 80px', fontSize: 18 }}>Error: {error}</Box>;\n    }\n\n    return (\n        <>\n            {posts.length > 0 ? (\n                <Grid container spacing={3}>\n                    {posts.map((post) => (\n                        <Grid item key={post._id} lg={3} sm={4} xs={12}>\n                            <Link style={{ textDecoration: 'none', color: 'inherit' }} to={`details/${post._id}`}>\n                                <Post post={post} />\n                            </Link>\n                        </Grid>\n                    ))}\n                </Grid>\n            ) : (\n                <Box style={{ color: '#878787', margin: '30px 80px', fontSize: 18 }}>No posts available.</Box>\n            )}\n        </>\n    );\n};\n\nexport default Posts;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AACzC,SAASC,IAAI,EAAEC,eAAe,QAAQ,kBAAkB;AACxD,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACmB,YAAY,CAAC,GAAGf,eAAe,CAAC,CAAC;EACxC,MAAMgB,QAAQ,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAE7CtB,SAAS,CAAC,MAAM;IACZ,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BN,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMO,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,WAAW,CAAC;UAAEJ,QAAQ,EAAEA,QAAQ,IAAI;QAAG,CAAC,CAAC;QACpE,IAAIG,QAAQ,CAACE,SAAS,EAAE;UACpBX,QAAQ,CAACS,QAAQ,CAACG,IAAI,CAAC;UACvBR,QAAQ,CAAC,IAAI,CAAC;QAClB,CAAC,MAAM;UACHA,QAAQ,CAAC,uBAAuB,CAAC;QACrC;MACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZU,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CC,QAAQ,CAAC,uBAAuB,CAAC;MACrC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDM,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,IAAIL,OAAO,EAAE;IACT,oBAAOP,OAAA,CAACN,GAAG;MAAA0B,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIf,KAAK,EAAE;IACP,oBAAOT,OAAA,CAACN,GAAG;MAAC+B,KAAK,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,MAAM,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAR,QAAA,GAAC,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpG;EAEA,oBACIxB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACKf,KAAK,CAACwB,MAAM,GAAG,CAAC,gBACb7B,OAAA,CAACP,IAAI;MAACqC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAX,QAAA,EACtBf,KAAK,CAAC2B,GAAG,CAAEC,IAAI,iBACZjC,OAAA,CAACP,IAAI;QAACyC,IAAI;QAAgBC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,EAAG;QAAAjB,QAAA,eAC3CpB,OAAA,CAACL,IAAI;UAAC8B,KAAK,EAAE;YAAEa,cAAc,EAAE,MAAM;YAAEZ,KAAK,EAAE;UAAU,CAAE;UAACa,EAAE,EAAE,WAAWN,IAAI,CAACO,GAAG,EAAG;UAAApB,QAAA,eACjFpB,OAAA,CAACF,IAAI;YAACmC,IAAI,EAAEA;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC,GAHKS,IAAI,CAACO,GAAG;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEPxB,OAAA,CAACN,GAAG;MAAC+B,KAAK,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,MAAM,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAR,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAChG,gBACH,CAAC;AAEX,CAAC;AAACpB,EAAA,CAvDID,KAAK;EAAA,QAKgBP,eAAe;AAAA;AAAA6C,EAAA,GALpCtC,KAAK;AAyDX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}